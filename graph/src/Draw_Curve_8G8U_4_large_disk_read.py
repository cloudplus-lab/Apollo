import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt


benchmark1 = "Benchmark: Hadoop Kmeans"
# benchmark2 = "Benchmark: Hadoop WordCount"
# WordCount 18G18U CPU_overall
# t1 = ""
# time1 = ""  
# benchmark1_a1 = ""
# benchmark1_b1 = ""
# benchmark1_c1 = ""
# benchmark1_d1 = ""

num = 13
workers = 4

t1 = "Hadoop TeraSort"  
time1 = "27"
benchmark1_a1 = ""  
benchmark1_b1 = ""
benchmark1_c1 = "1548747405000,384204.8,66355.2,1.4,3.4 1548747410000,1253376.0,273612.8,11.2,14.2 1548747415000,5102796.8,352256.0,37.4,14.6 1548747420000,0.0,39768883.2,0.0,125.2 1548747425000,9830.4,195864166.4,2.4,403.4 1548747430000,7372.8,220938240.0,1.8,452.0 1548747435000,9830.4,76518195.2,1.2,158.0"
benchmark1_d1 = ""

t2 = "Spark TeraSort"
time2 = "31"  
benchmark2_a1 = ""  
benchmark2_b1 = ""
benchmark2_c1 = "1548747405000,384204.8,66355.2,1.4,3.4 1548747410000,1253376.0,273612.8,11.2,14.2 1548747415000,5102796.8,352256.0,37.4,14.6 1548747420000,0.0,39768883.2,0.0,125.2 1548747425000,9830.4,195864166.4,2.4,403.4 1548747430000,7372.8,220938240.0,1.8,452.0 1548747435000,9830.4,76518195.2,1.2,158.0"
benchmark2_d1 = ""

t3 = "Hadoop WordCount"
time3 = "27"
benchmark3_a1 = ""  
benchmark3_b1 = ""
benchmark3_c1 = "1548747655000,3276.8,177840947.2,0.8,366.8 1548747660000,4096.0,159934054.4,1.0,328.0 1548747665000,1638.4,67837952.0,0.4,140.0 1548747670000,4096.0,115604684.8,1.0,237.0 1548747675000,4915.2,185894502.4,1.2,382.6 1548747680000,7372.8,264471347.2,1.8,608.2 1548747685000,8192.0,288022528.0,2.0,593.2 1548747690000,7372.8,304642457.6,1.8,627.2"
benchmark3_d1 = ""

t4 = "Spark WordCount"
time4 = "30"
benchmark4_a1 = ""  
benchmark4_b1 = ""
benchmark4_c1 = "1548747655000,3276.8,177840947.2,0.8,366.8 1548747660000,4096.0,159934054.4,1.0,328.0 1548747665000,1638.4,67837952.0,0.4,140.0 1548747670000,4096.0,115604684.8,1.0,237.0 1548747675000,4915.2,185894502.4,1.2,382.6 1548747680000,7372.8,264471347.2,1.8,608.2 1548747685000,8192.0,288022528.0,2.0,593.2 1548747690000,7372.8,304642457.6,1.8,627.2"
benchmark4_d1 = ""

t5 = "Hadoop PageRank"
time5 = "48"
benchmark5_a1 = ""  
benchmark5_b1 = ""
benchmark5_c1 = "1548747805000,0.0,16330752.0,0.0,52.4 1548747810000,1638.4,75834982.4,0.4,216.8 1548747815000,0.0,236748.8,0.0,3.0 1548747820000,1638.4,158105.6,0.4,2.8 1548747825000,0.0,245760.0,0.0,12.2 1548747830000,819.2,20466073.6,0.2,52.2 1548747835000,2457.6,38314803.2,0.6,119.2 1548747840000,0.0,21540044.8,0.0,59.6 1548747845000,0.0,122880.0,0.0,1.2 1548747850000,0.0,204800.0,0.0,3.2"
benchmark5_d1 = ""

t6 = "Spark PageRank"
time6 = "33"
benchmark6_a1 = ""  
benchmark6_b1 = ""
benchmark6_c1 = "1548747805000,0.0,16330752.0,0.0,52.4 1548747810000,1638.4,75834982.4,0.4,216.8 1548747815000,0.0,236748.8,0.0,3.0 1548747820000,1638.4,158105.6,0.4,2.8 1548747825000,0.0,245760.0,0.0,12.2 1548747830000,819.2,20466073.6,0.2,52.2 1548747835000,2457.6,38314803.2,0.6,119.2 1548747840000,0.0,21540044.8,0.0,59.6 1548747845000,0.0,122880.0,0.0,1.2 1548747850000,0.0,204800.0,0.0,3.2"
benchmark6_d1 = ""

t7 = "Hadoop Bayes"
time7 = "268"
benchmark7_a1 = ""
benchmark7_b1 = ""
benchmark7_c1 = "1548748175000,0.0,58982.4,0.0,9.0 1548748180000,0.0,58163.2,0.0,2.4 1548748185000,0.0,14611251.2,0.0,54.8 1548748190000,0.0,21381120.0,0.0,53.6 1548748195000,0.0,26672332.8,0.0,69.4 1548748200000,0.0,77139968.0,0.0,169.2"
benchmark7_d1 = ""

t8 = "Spark Bayes"
time8 = "44"
benchmark8_a1 = ""
benchmark8_b1 = ""
benchmark8_c1 = "1548748175000,0.0,58982.4,0.0,9.0 1548748180000,0.0,58163.2,0.0,2.4 1548748185000,0.0,14611251.2,0.0,54.8 1548748190000,0.0,21381120.0,0.0,53.6 1548748195000,0.0,26672332.8,0.0,69.4 1548748200000,0.0,77139968.0,0.0,169.2"
benchmark8_d1 = ""

t9 = "Hadoop Kmeans"
time9 = "126"
benchmark9_a1 = ""  
benchmark9_b1 = ""
benchmark9_c1 = "1548748900000,0.0,41841459.2,0.0,124.0 1548748905000,0.0,55705.6,0.0,1.6 1548748910000,0.0,0.0,0.0,0.0 1548748915000,0.0,2457.6,0.0,0.4 1548748920000,0.0,23756.8,0.0,2.0 1548748925000,0.0,101580.8,0.0,12.0 1548748930000,0.0,35225.6,0.0,7.0 1548748935000,0.0,40960.0,0.0,5.0 1548748940000,0.0,32768.0,0.0,1.4 1548748945000,0.0,30310.4,0.0,1.2 1548748950000,0.0,35225.6,0.0,2.0 1548748955000,0.0,19660.8,0.0,1.6 1548748960000,0.0,36864.0,0.0,7.0 1548748965000,0.0,17203.2,0.0,3.2 1548748970000,0.0,1638.4,0.0,0.4 1548748975000,0.0,19660.8,0.0,3.8 1548748980000,0.0,22118.4,0.0,2.6 1548748985000,0.0,20480.0,0.0,2.6 1548748990000,0.0,5734.4,0.0,0.8 1548748995000,0.0,0.0,0.0,0.0 1548749000000,0.0,5734.4,0.0,0.8 1548749005000,0.0,4915.2,0.0,0.8 1548749010000,0.0,19660.8,0.0,3.0 1548749015000,0.0,21299.2,0.0,3.0 1548749020000,0.0,7372.8,0.0,1.2 1548749025000,0.0,0.0,0.0,0.0 1548749030000,0.0,2457.6,0.0,0.4 1548749035000,0.0,0.0,0.0,0.0 1548749040000,0.0,13107.2,0.0,2.0 1548749045000,0.0,16384.0,0.0,2.6 1548749050000,0.0,11468.8,0.0,0.8 1548749055000,0.0,13730611.2,0.0,34.8 1548749060000,0.0,31084544.0,0.0,80.4 1548749065000,0.0,1177190.4,0.0,8.6 1548749070000,0.0,45875.2,0.0,0.8 1548749075000,0.0,8192.0,0.0,1.2 1548749080000,0.0,416153.6,0.0,11.0 1548749085000,0.0,15793356.8,0.0,42.8 1548749090000,0.0,2387148.8,0.0,21.4 1548749095000,0.0,152371.2,0.0,13.4 1548749100000,0.0,18022.4,0.0,1.6 1548749105000,0.0,8192.0,0.0,1.4 1548749110000,0.0,0.0,0.0,0.0 1548749115000,0.0,40140.8,0.0,4.2 1548749120000,0.0,64716.8,0.0,5.6 1548749125000,0.0,14745.6,0.0,2.0 1548749130000,0.0,18841.6,0.0,2.2 1548749135000,0.0,2457.6,0.0,0.4 1548749140000,0.0,2457.6,0.0,0.4 1548749145000,0.0,21299.2,0.0,2.2 1548749150000,0.0,44236.8,0.0,4.6 1548749155000,0.0,23756.8,0.0,2.2 1548749160000,0.0,9830.4,0.0,1.0 1548749165000,0.0,13107.2,0.0,1.8 1548749170000,0.0,2457.6,0.0,0.4 1548749175000,0.0,28672.0,0.0,2.2 1548749180000,0.0,54067.2,0.0,4.0 1548749185000,0.0,26214.4,0.0,2.4 1548749190000,0.0,27033.6,0.0,1.2 1548749195000,0.0,4915.2,0.0,0.8 1548749200000,0.0,11468.8,0.0,1.8 1548749205000,0.0,29491.2,0.0,3.4 1548749210000,0.0,57344.0,0.0,5.6 1548749215000,0.0,13926.4,0.0,1.4 1548749220000,0.0,25395.2,0.0,3.2 1548749225000,0.0,12288.0,0.0,1.0 1548749230000,0.0,7372.8,0.0,0.8 1548749235000,0.0,18841.6,0.0,2.0 1548749240000,0.0,44236.8,0.0,3.8 1548749245000,0.0,22937.6,0.0,2.0 1548749250000,0.0,14745.6,0.0,1.4 1548749255000,0.0,7372.8,0.0,1.4 1548749260000,0.0,13926.4,0.0,1.6 1548749265000,0.0,13926.4,0.0,1.6 1548749270000,0.0,56524.8,0.0,4.4 1548749275000,0.0,23756.8,0.0,2.0 1548749280000,0.0,293273.6,0.0,3.0 1548749285000,0.0,29279846.4,0.0,67.4 1548749290000,819.2,47426764.8,0.2,103.4 1548749295000,0.0,41933209.6,0.0,86.8 1548749300000,0.0,41779.2,0.0,1.6 1548749305000,0.0,15197798.4,0.0,37.6 1548749310000,0.0,101339136.0,0.0,212.8 1548749315000,819.2,150243737.6,0.2,312.4 1548749320000,819.2,263909376.0,0.2,543.8 1548749325000,3276.8,430824652.8,0.8,880.8 1548749330000,2457.6,412096921.6,0.6,843.2 1548749335000,4096.0,286545510.4,1.0,585.0"
benchmark9_d1 = ""

t10 = "Spark Kmeans"
time10 = "34"
benchmark10_a1 = ""  
benchmark10_b1 = ""
benchmark10_c1 = "1548748900000,0.0,41841459.2,0.0,124.0 1548748905000,0.0,55705.6,0.0,1.6 1548748910000,0.0,0.0,0.0,0.0 1548748915000,0.0,2457.6,0.0,0.4 1548748920000,0.0,23756.8,0.0,2.0 1548748925000,0.0,101580.8,0.0,12.0 1548748930000,0.0,35225.6,0.0,7.0 1548748935000,0.0,40960.0,0.0,5.0 1548748940000,0.0,32768.0,0.0,1.4 1548748945000,0.0,30310.4,0.0,1.2 1548748950000,0.0,35225.6,0.0,2.0 1548748955000,0.0,19660.8,0.0,1.6 1548748960000,0.0,36864.0,0.0,7.0 1548748965000,0.0,17203.2,0.0,3.2 1548748970000,0.0,1638.4,0.0,0.4 1548748975000,0.0,19660.8,0.0,3.8 1548748980000,0.0,22118.4,0.0,2.6 1548748985000,0.0,20480.0,0.0,2.6 1548748990000,0.0,5734.4,0.0,0.8 1548748995000,0.0,0.0,0.0,0.0 1548749000000,0.0,5734.4,0.0,0.8 1548749005000,0.0,4915.2,0.0,0.8 1548749010000,0.0,19660.8,0.0,3.0 1548749015000,0.0,21299.2,0.0,3.0 1548749020000,0.0,7372.8,0.0,1.2 1548749025000,0.0,0.0,0.0,0.0 1548749030000,0.0,2457.6,0.0,0.4 1548749035000,0.0,0.0,0.0,0.0 1548749040000,0.0,13107.2,0.0,2.0 1548749045000,0.0,16384.0,0.0,2.6 1548749050000,0.0,11468.8,0.0,0.8 1548749055000,0.0,13730611.2,0.0,34.8 1548749060000,0.0,31084544.0,0.0,80.4 1548749065000,0.0,1177190.4,0.0,8.6 1548749070000,0.0,45875.2,0.0,0.8 1548749075000,0.0,8192.0,0.0,1.2 1548749080000,0.0,416153.6,0.0,11.0 1548749085000,0.0,15793356.8,0.0,42.8 1548749090000,0.0,2387148.8,0.0,21.4 1548749095000,0.0,152371.2,0.0,13.4 1548749100000,0.0,18022.4,0.0,1.6 1548749105000,0.0,8192.0,0.0,1.4 1548749110000,0.0,0.0,0.0,0.0 1548749115000,0.0,40140.8,0.0,4.2 1548749120000,0.0,64716.8,0.0,5.6 1548749125000,0.0,14745.6,0.0,2.0 1548749130000,0.0,18841.6,0.0,2.2 1548749135000,0.0,2457.6,0.0,0.4 1548749140000,0.0,2457.6,0.0,0.4 1548749145000,0.0,21299.2,0.0,2.2 1548749150000,0.0,44236.8,0.0,4.6 1548749155000,0.0,23756.8,0.0,2.2 1548749160000,0.0,9830.4,0.0,1.0 1548749165000,0.0,13107.2,0.0,1.8 1548749170000,0.0,2457.6,0.0,0.4 1548749175000,0.0,28672.0,0.0,2.2 1548749180000,0.0,54067.2,0.0,4.0 1548749185000,0.0,26214.4,0.0,2.4 1548749190000,0.0,27033.6,0.0,1.2 1548749195000,0.0,4915.2,0.0,0.8 1548749200000,0.0,11468.8,0.0,1.8 1548749205000,0.0,29491.2,0.0,3.4 1548749210000,0.0,57344.0,0.0,5.6 1548749215000,0.0,13926.4,0.0,1.4 1548749220000,0.0,25395.2,0.0,3.2 1548749225000,0.0,12288.0,0.0,1.0 1548749230000,0.0,7372.8,0.0,0.8 1548749235000,0.0,18841.6,0.0,2.0 1548749240000,0.0,44236.8,0.0,3.8 1548749245000,0.0,22937.6,0.0,2.0 1548749250000,0.0,14745.6,0.0,1.4 1548749255000,0.0,7372.8,0.0,1.4 1548749260000,0.0,13926.4,0.0,1.6 1548749265000,0.0,13926.4,0.0,1.6 1548749270000,0.0,56524.8,0.0,4.4 1548749275000,0.0,23756.8,0.0,2.0 1548749280000,0.0,293273.6,0.0,3.0 1548749285000,0.0,29279846.4,0.0,67.4 1548749290000,819.2,47426764.8,0.2,103.4 1548749295000,0.0,41933209.6,0.0,86.8 1548749300000,0.0,41779.2,0.0,1.6 1548749305000,0.0,15197798.4,0.0,37.6 1548749310000,0.0,101339136.0,0.0,212.8 1548749315000,819.2,150243737.6,0.2,312.4 1548749320000,819.2,263909376.0,0.2,543.8 1548749325000,3276.8,430824652.8,0.8,880.8 1548749330000,2457.6,412096921.6,0.6,843.2 1548749335000,4096.0,286545510.4,1.0,585.0"
benchmark10_d1 = ""

t11 = "Spark LDA"
time11 = "34"
benchmark11_a1 = ""  
benchmark11_b1 = ""
benchmark11_c1 = "1548751420000,2457.6,0.0,0.6,0.0 1548751425000,0.0,1256652.8,0.0,17.6 1548751430000,0.0,34207334.4,0.0,95.4 1548751435000,27033.6,7672627.2,5.0,16.4 1548751440000,444006.4,51478528.0,5.6,116.2 1548751445000,0.0,52829388.8,0.0,109.2 1548751450000,0.0,94201446.4,0.0,261.4"
benchmark11_d1 = ""

t12 = "Spark PCA"
time12 = "38"
benchmark12_a1 = ""  
benchmark12_b1 = ""
benchmark12_c1 = "1548751165000,0.0,50790.4,0.0,7.8 1548751170000,0.0,18022.4,0.0,0.8 1548751175000,0.0,14051737.6,0.0,43.6 1548751180000,444825.6,13615104.0,5.2,35.0 1548751185000,9011.2,1449164.8,1.0,4.4 1548751190000,0.0,17000857.6,0.0,36.0"
benchmark12_d1 = ""

t13 = "Spark LR"
time13 = "41"
benchmark13_a1 = ""  
benchmark13_b1 = ""
benchmark13_c1 = "1548749955000,110592.0,9830.4,27.0,1.2 1548749960000,40140.8,188416.0,9.8,1.8 1548749965000,0.0,54501376.0,0.0,132.4 1548749970000,819.2,30514380.8,0.2,64.8 1548749975000,0.0,19906560.0,0.0,41.2 1548749980000,0.0,31481856.0,0.0,65.0 1548749985000,0.0,50790.4,0.0,1.0 1548749990000,819.2,15738470.4,0.2,37.0 1548749995000,3276.8,94991155.2,0.8,263.0 1548750000000,4915.2,315733606.4,1.2,673.8 1548750005000,5734.4,372731904.0,1.4,763.2 1548750010000,2457.6,205087539.2,0.6,418.8 1548750015000,0.0,149428633.6,0.0,306.2 1548750020000,0.0,130111897.6,0.0,268.2 1548750025000,0.0,43674009.6,0.0,91.0 1548750030000,6553.6,216890572.8,1.6,454.6 1548750035000,4096.0,274930073.6,1.0,567.0 1548750040000,1638.4,245537177.6,0.4,502.6 1548750045000,1638.4,131208806.4,0.4,268.4 1548750050000,819.2,211792691.2,0.2,432.6 1548750055000,819.2,92343500.8,0.2,189.8 1548750060000,3276.8,240915251.2,0.8,497.8 1548750065000,1638.4,245526528.0,0.4,504.6 1548750070000,819.2,100374118.4,0.2,212.2 1548750075000,819.2,117751808.0,0.2,241.4 1548750080000,3276.8,256942899.2,0.8,525.6 1548750085000,819.2,181705932.8,0.2,371.6 1548750090000,0.0,50713395.2,0.0,105.0 1548750095000,1638.4,117012889.6,0.4,244.2 1548750100000,819.2,153667993.6,0.2,318.6 1548750105000,2457.6,105480192.0,0.6,217.2 1548750110000,1638.4,256189235.2,0.4,526.8 1548750115000,819.2,83232358.4,0.2,171.6 1548750120000,819.2,84489011.2,0.2,175.0 1548750125000,1638.4,102641664.0,0.4,212.6 1548750130000,819.2,100513382.4,0.2,209.6 1548750135000,819.2,47806054.4,0.2,109.0 1548750140000,217907.2,27135180.8,7.6,57.0 1548750145000,0.0,93033267.2,0.0,194.8"
benchmark13_d1 = ""

t14 = "Spark LDA"
time14 = "54"
benchmark14_a1 = ""  
benchmark14_b1 = ""
benchmark14_c1 = ""
benchmark14_d1 = ""

t15 = "Spark SVM"
time15 = "40"
benchmark15_a1 = ""
benchmark15_b1 = ""
benchmark15_c1 = ""
benchmark15_d1 = ""

col_labels = []
row_labels = ['CPU mean(%)', 'CPU standard deviation(%)', 'RAM mean(%)', 'RAM standard deviation(%)', 'Disk read mean(Mbps)', 'Disk read standard deviation(Mbps)', \
              'Disk write mean(%)', 'Disk write standard deviation(Mbps)', 'Network receive mean(Mbps)', 'Network receive standard deviation(Mbps)', \
              'Network send mean(Mbps)', 'Network send standard deviation(Mbps)']
table_vals = []
col_value = []
mean_value = []
row_colors = ['gold']
for i in range(1,num+1):
    c = locals()['benchmark%s_c1' % str(i)].split(" ")
    x = []
    y_c1 = []
    y_c2 = []
    l = 0  
    for n in c:   
        l = l + 1        
        m = n.split(",")
        x.append(5*int(l))          
        y_c1.append(float('%.2f' % (float(m[1]))) / 1024 / 1024 / workers)
        y_c2.append(float('%.2f' % (float(m[2]))) / 1024 / 1024 / workers)
    print("Disk read mean: %sMbps" % ('%.2f' % (np.mean(np.array(y_c1)))))
    print("Disk read standard deviation: %sMbps" % ('%.2f' % (np.std(np.array(y_c1)))))
    print("Disk write mean: %sMbps" % ('%.2f' % (np.mean(np.array(y_c2)))))
    print("Disk write standard deviation: %sMbps" % ('%.2f' % (np.std(np.array(y_c2)))))
#     col_value_float.append(('%.2f' % (np.mean(np.array(y_a))))) 
#     col_value_float.append(('%.2f' % (np.std(np.array(y_a)))))
#     col_value_float.append(('%.2f' % (np.mean(np.array(y_b))))) 
#     col_value_float.append(('%.2f' % (np.std(np.array(y_b)))))
#     col_value_float.append(('%.2f' % (np.mean(np.array(y_c1)))))
#     col_value_float.append(('%.2f' % (np.std(np.array(y_c1))))) 
#     col_value_float.append(('%.2f' % (np.mean(np.array(y_c2))))) 
#     col_value_float.append(('%.2f' % (np.std(np.array(y_c2))))) 
#     col_value_float.append(('%.2f' % (np.mean(np.array(y_d1))))) 
#     col_value_float.append(('%.2f' % (np.std(np.array(y_d1))))) 
#     col_value_float.append(('%.2f' % (np.mean(np.array(y_d2))))) 
#     col_value_float.append(('%.2f' % (np.std(np.array(y_d2)))))
    mean_value.append([('%.2f' % (np.mean(np.array(y_c1)))), ('%.2f' % (np.mean(np.array(y_c2))))])
    

table_vals = []
tmp = []
for col in mean_value:
    print(np.array(col))
# for col in col_value:
#     print(np.array(col))
# for i in range(0,len(col_value[0])):
#     for col in col_value:
#         tmp.append(col[i])
#     table_vals.append(tmp)
# #     print(tmp)
#     tmp = []
# print(table_vals)
# print(col_labels)
# print(row_labels)
# my_table = plt.table(cellText=table_vals, colWidths=[0.2]*num, \
#                      rowLabels=row_labels, colLabels=col_labels, \
#                      loc='best')
# my_table.set_fontsize(20)
# plt.axis('off')

# plt.show()